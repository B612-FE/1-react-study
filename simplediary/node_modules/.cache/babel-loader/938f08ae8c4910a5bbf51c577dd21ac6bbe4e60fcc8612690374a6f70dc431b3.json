{"ast":null,"code":"var _jsxFileName = \"/Users/eunjung/Desktop/simplediary/src/App.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport './App.css';\nimport DiaryEditor from \"./DiaryEditor.js\";\nimport DiaryList from \"./DiaryList.js\";\n\n// https://jsonplaceholder.typicode.com/comments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n  };\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setData(newDiaryList);\n  };\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Lifecycle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","DiaryEditor","DiaryList","jsxDEV","_jsxDEV","App","_s","data","setData","dataId","getData","res","fetch","then","json","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","console","log","newDiaryList","filter","it","onEdit","newContent","map","className","children","Lifecycle","fileName","_jsxFileName","lineNumber","columnNumber","diaryList","_c","$RefreshReg$"],"sources":["/Users/eunjung/Desktop/simplediary/src/App.js"],"sourcesContent":["import {useRef, useState} from \"react\";\nimport './App.css';\nimport DiaryEditor from \"./DiaryEditor.js\";\nimport DiaryList from \"./DiaryList.js\";\n\n// https://jsonplaceholder.typicode.com/comments\n\nconst App = () => {\n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  const getData = async() => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then((res)=>res.json())\n  }\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetId) => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(\n      data.map((it) => \n        it.id === targetId ? {...it, content: newContent}: it\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Lifecycle />\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACtC,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,MAAM,GAAGV,MAAM,CAAC,CAAC,CAAC;EAExB,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAW;IACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC,CAACC,IAAI,CAAEF,GAAG,IAAGA,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC;EAClG,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAEC,OAAO,KAAK;IAC7C,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACzC,MAAMC,OAAO,GAAG;MACdN,MAAM;MACNC,OAAO;MACPC,OAAO;MACPC,YAAY;MACZI,EAAE,EAAEd,MAAM,CAACe;IACb,CAAC;IACDf,MAAM,CAACe,OAAO,IAAI,CAAC;IACnBhB,OAAO,CAAC,CAACc,OAAO,EAAE,GAAGf,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMkB,QAAQ,GAAIC,QAAQ,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAE,GAAEF,QAAS,WAAU,CAAC;IACnC,MAAMG,YAAY,GAAGtB,IAAI,CAACuB,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACR,EAAE,KAAKG,QAAQ,CAAC;IAC5DlB,OAAO,CAACqB,YAAY,CAAC;EACvB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAACN,QAAQ,EAAEO,UAAU,KAAK;IACvCzB,OAAO,CACLD,IAAI,CAAC2B,GAAG,CAAEH,EAAE,IACVA,EAAE,CAACR,EAAE,KAAKG,QAAQ,GAAG;MAAC,GAAGK,EAAE;MAAEd,OAAO,EAAEgB;IAAU,CAAC,GAAEF,EACrD,CACF,CAAC;EACH,CAAC;EAED,oBACE3B,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhC,OAAA,CAACiC,SAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbrC,OAAA,CAACH,WAAW;MAACc,QAAQ,EAAEA;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCrC,OAAA,CAACF,SAAS;MAACuB,QAAQ,EAAEA,QAAS;MAACiB,SAAS,EAAEnC;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACnC,EAAA,CA3CID,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA6CT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}