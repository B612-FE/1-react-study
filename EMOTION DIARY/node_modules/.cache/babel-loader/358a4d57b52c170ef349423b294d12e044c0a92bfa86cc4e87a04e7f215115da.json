{"ast":null,"code":"import _objectSpread from\"/Users/eunjung/Desktop/EMOTION DIARY/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/eunjung/Desktop/EMOTION DIARY/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useNavigate}from\"react-router-dom\";import{useContext,useEffect,useRef,useState}from\"react\";import MyHeader from\"./MyHeader\";import MyButton from\"./MyButton\";import EmotionItem from\"./EmotionItem\";import{DiaryDispatchContext}from\"../App\";import{emotionList}from\"../util/emotion\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getStringDate=function getStringDate(date){return date.toISOString().slice(0,10);};var DiaryEditor=function DiaryEditor(_ref){var isEdit=_ref.isEdit,originData=_ref.originData;var contentRef=useRef();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),content=_useState2[0],setContent=_useState2[1];var _useState3=useState(3),_useState4=_slicedToArray(_useState3,2),emotion=_useState4[0],setEmotion=_useState4[1];var _useState5=useState(getStringDate(new Date())),_useState6=_slicedToArray(_useState5,2),date=_useState6[0],setDate=_useState6[1];var _useContext=useContext(DiaryDispatchContext),onCreate=_useContext.onCreate,onEdit=_useContext.onEdit,onRemove=_useContext.onRemove;var handleClickEmote=function handleClickEmote(emotion){setEmotion(emotion);};var navigate=useNavigate();var handleSubmit=function handleSubmit(){if(content.length<1){contentRef.current.focus();return;}if(window.confirm(isEdit?\"일기를 수정하시겠습니까?\":\"새로운 일기를 작성하시겠습니까?\")){if(!isEdit){onCreate(date,content,emotion);}else{onEdit(originData.id,date,content,emotion);}}onCreate(date,content,emotion);navigate(\"/\",{replace:true});};var handleRemove=function handleRemove(){if(window.confirm(\"정말 삭제하시겠습니까?\")){onRemove(originData.id);navigate(\"/\",{replace:true});}};useEffect(function(){if(isEdit){setDate(getStringDate(new Date(parseInt(originData.date))));setEmotion(originData.emotion);setContent(originData.content);}},[isEdit,originData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"DiaryEditor\",children:[/*#__PURE__*/_jsx(MyHeader,{headText:isEdit?\"일기 수정하기\":\"새 일기 쓰기\",leftChild:/*#__PURE__*/_jsx(MyButton,{text:\"< 뒤로가기\",onClick:function onClick(){return navigate(-1);}}),rightChild:isEdit&&/*#__PURE__*/_jsx(MyButton,{text:\"삭제하기\",type:\"negative\",onClick:handleRemove})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input_box\",children:/*#__PURE__*/_jsx(\"input\",{className:\"input_date\",value:date,onChange:function onChange(e){return setDate(e.target.value);},type:\"date\"})})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input_box emotion_list_wrapper\",children:emotionList.map(function(it){return/*#__PURE__*/_jsx(EmotionItem,_objectSpread(_objectSpread({},it),{},{onClick:handleClickEmote,isSelected:it.emotion_id===emotion}),it.emotion_id);})})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input_box text_wrapper\",children:/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB098\\uC694\",ref:contentRef,value:content,onChange:function onChange(e){return setContent(e.target.value);}})})]}),/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"control_box\",children:[/*#__PURE__*/_jsx(MyButton,{text:\"취소하기\",onClick:function onClick(){return navigate(-1);}}),/*#__PURE__*/_jsx(MyButton,{text:\"작성완료\",type:\"positive\",onClick:handleSubmit})]})})]})]});};export default DiaryEditor;","map":{"version":3,"names":["useNavigate","useContext","useEffect","useRef","useState","MyHeader","MyButton","EmotionItem","DiaryDispatchContext","emotionList","jsx","_jsx","jsxs","_jsxs","getStringDate","date","toISOString","slice","DiaryEditor","_ref","isEdit","originData","contentRef","_useState","_useState2","_slicedToArray","content","setContent","_useState3","_useState4","emotion","setEmotion","_useState5","Date","_useState6","setDate","_useContext","onCreate","onEdit","onRemove","handleClickEmote","navigate","handleSubmit","length","current","focus","window","confirm","id","replace","handleRemove","parseInt","className","children","headText","leftChild","text","onClick","rightChild","type","value","onChange","e","target","map","it","_objectSpread","isSelected","emotion_id","placeholder","ref"],"sources":["/Users/eunjung/Desktop/EMOTION DIARY/src/components/DiaryEditor.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\n\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport EmotionItem from \"./EmotionItem\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { emotionList } from \"../util/emotion\";\n\nconst getStringDate = (date) => {\n  return date.toISOString().slice(0, 10);\n};\n\nconst DiaryEditor = ({ isEdit, originData }) => {\n  const contentRef = useRef();\n  const [content, setContent] = useState(\"\");\n  const [emotion, setEmotion] = useState(3);\n  const [date, setDate] = useState(getStringDate(new Date()));\n\n  const { onCreate, onEdit, onRemove } = useContext(DiaryDispatchContext);\n  const handleClickEmote = (emotion) => {\n    setEmotion(emotion);\n  };\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n      return;\n    }\n\n    if (\n      window.confirm(\n        isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성하시겠습니까?\"\n      )\n    ) {\n      if (!isEdit) {\n        onCreate(date, content, emotion);\n      } else {\n        onEdit(originData.id, date, content, emotion);\n      }\n    }\n    onCreate(date, content, emotion);\n    navigate(\"/\", { replace: true });\n  };\n\n  const handleRemove = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      onRemove(originData.id);\n      navigate(\"/\", { replace: true });\n    }\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      setDate(getStringDate(new Date(parseInt(originData.date))));\n      setEmotion(originData.emotion);\n      setContent(originData.content);\n    }\n  }, [isEdit, originData]);\n\n  return (\n    <div className=\"DiaryEditor\">\n      <MyHeader\n        headText={isEdit ? \"일기 수정하기\" : \"새 일기 쓰기\"}\n        leftChild={\n          <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n        }\n        rightChild={\n          isEdit && (\n            <MyButton\n              text={\"삭제하기\"}\n              type={\"negative\"}\n              onClick={handleRemove}\n            />\n          )\n        }\n      />\n      <div>\n        <section>\n          <h4>오늘은 언제인가요?</h4>\n          <div className=\"input_box\">\n            <input\n              className=\"input_date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              type=\"date\"\n            />\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 감정</h4>\n          <div className=\"input_box emotion_list_wrapper\">\n            {emotionList.map((it) => (\n              <EmotionItem\n                key={it.emotion_id}\n                {...it}\n                onClick={handleClickEmote}\n                isSelected={it.emotion_id === emotion}\n              />\n            ))}\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 일기</h4>\n          <div className=\"input_box text_wrapper\">\n            <textarea\n              placeholder=\"오늘은 어땠나요\"\n              ref={contentRef}\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </div>\n        </section>\n        <section>\n          <div className=\"control_box\">\n            <MyButton text={\"취소하기\"} onClick={() => navigate(-1)} />\n            <MyButton\n              text={\"작성완료\"}\n              type={\"positive\"}\n              onClick={handleSubmit}\n            />\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryEditor;\n"],"mappings":"mPAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,UAAU,CAAEC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAE/D,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,OAASC,oBAAoB,KAAQ,QAAQ,CAC7C,OAASC,WAAW,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9C,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,IAAI,CAAK,CAC9B,MAAO,CAAAA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CACxC,CAAC,CAED,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,IAAA,CAA+B,IAAzB,CAAAC,MAAM,CAAAD,IAAA,CAANC,MAAM,CAAEC,UAAU,CAAAF,IAAA,CAAVE,UAAU,CACvC,GAAM,CAAAC,UAAU,CAAGnB,MAAM,CAAC,CAAC,CAC3B,IAAAoB,SAAA,CAA8BnB,QAAQ,CAAC,EAAE,CAAC,CAAAoB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1B,IAAAI,UAAA,CAA8BxB,QAAQ,CAAC,CAAC,CAAC,CAAAyB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAlCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAAwB5B,QAAQ,CAACU,aAAa,CAAC,GAAI,CAAAmB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAAC,UAAA,CAAAT,cAAA,CAAAO,UAAA,IAApDjB,IAAI,CAAAmB,UAAA,IAAEC,OAAO,CAAAD,UAAA,IAEpB,IAAAE,WAAA,CAAuCnC,UAAU,CAACO,oBAAoB,CAAC,CAA/D6B,QAAQ,CAAAD,WAAA,CAARC,QAAQ,CAAEC,MAAM,CAAAF,WAAA,CAANE,MAAM,CAAEC,QAAQ,CAAAH,WAAA,CAARG,QAAQ,CAClC,GAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIV,OAAO,CAAK,CACpCC,UAAU,CAACD,OAAO,CAAC,CACrB,CAAC,CACD,GAAM,CAAAW,QAAQ,CAAGzC,WAAW,CAAC,CAAC,CAE9B,GAAM,CAAA0C,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,GAAIhB,OAAO,CAACiB,MAAM,CAAG,CAAC,CAAE,CACtBrB,UAAU,CAACsB,OAAO,CAACC,KAAK,CAAC,CAAC,CAC1B,OACF,CAEA,GACEC,MAAM,CAACC,OAAO,CACZ3B,MAAM,CAAG,eAAe,CAAG,mBAC7B,CAAC,CACD,CACA,GAAI,CAACA,MAAM,CAAE,CACXiB,QAAQ,CAACtB,IAAI,CAAEW,OAAO,CAAEI,OAAO,CAAC,CAClC,CAAC,IAAM,CACLQ,MAAM,CAACjB,UAAU,CAAC2B,EAAE,CAAEjC,IAAI,CAAEW,OAAO,CAAEI,OAAO,CAAC,CAC/C,CACF,CACAO,QAAQ,CAACtB,IAAI,CAAEW,OAAO,CAAEI,OAAO,CAAC,CAChCW,QAAQ,CAAC,GAAG,CAAE,CAAEQ,OAAO,CAAE,IAAK,CAAC,CAAC,CAClC,CAAC,CAED,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,GAAIJ,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,CAAE,CAClCR,QAAQ,CAAClB,UAAU,CAAC2B,EAAE,CAAC,CACvBP,QAAQ,CAAC,GAAG,CAAE,CAAEQ,OAAO,CAAE,IAAK,CAAC,CAAC,CAClC,CACF,CAAC,CAED/C,SAAS,CAAC,UAAM,CACd,GAAIkB,MAAM,CAAE,CACVe,OAAO,CAACrB,aAAa,CAAC,GAAI,CAAAmB,IAAI,CAACkB,QAAQ,CAAC9B,UAAU,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC,CAC3DgB,UAAU,CAACV,UAAU,CAACS,OAAO,CAAC,CAC9BH,UAAU,CAACN,UAAU,CAACK,OAAO,CAAC,CAChC,CACF,CAAC,CAAE,CAACN,MAAM,CAAEC,UAAU,CAAC,CAAC,CAExB,mBACER,KAAA,QAAKuC,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B1C,IAAA,CAACN,QAAQ,EACPiD,QAAQ,CAAElC,MAAM,CAAG,SAAS,CAAG,SAAU,CACzCmC,SAAS,cACP5C,IAAA,CAACL,QAAQ,EAACkD,IAAI,CAAE,QAAS,CAACC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAhB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAE,CACzD,CACDiB,UAAU,CACRtC,MAAM,eACJT,IAAA,CAACL,QAAQ,EACPkD,IAAI,CAAE,MAAO,CACbG,IAAI,CAAE,UAAW,CACjBF,OAAO,CAAEP,YAAa,CACvB,CAEJ,CACF,CAAC,cACFrC,KAAA,QAAAwC,QAAA,eACExC,KAAA,YAAAwC,QAAA,eACE1C,IAAA,OAAA0C,QAAA,CAAI,oDAAU,CAAI,CAAC,cACnB1C,IAAA,QAAKyC,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxB1C,IAAA,UACEyC,SAAS,CAAC,YAAY,CACtBQ,KAAK,CAAE7C,IAAK,CACZ8C,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAA3B,OAAO,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,EAAC,CACzCD,IAAI,CAAC,MAAM,CACZ,CAAC,CACC,CAAC,EACC,CAAC,cACV9C,KAAA,YAAAwC,QAAA,eACE1C,IAAA,OAAA0C,QAAA,CAAI,iCAAM,CAAI,CAAC,cACf1C,IAAA,QAAKyC,SAAS,CAAC,gCAAgC,CAAAC,QAAA,CAC5C5C,WAAW,CAACuD,GAAG,CAAC,SAACC,EAAE,qBAClBtD,IAAA,CAACJ,WAAW,CAAA2D,aAAA,CAAAA,aAAA,IAEND,EAAE,MACNR,OAAO,CAAEjB,gBAAiB,CAC1B2B,UAAU,CAAEF,EAAE,CAACG,UAAU,GAAKtC,OAAQ,GAHjCmC,EAAE,CAACG,UAIT,CAAC,EACH,CAAC,CACC,CAAC,EACC,CAAC,cACVvD,KAAA,YAAAwC,QAAA,eACE1C,IAAA,OAAA0C,QAAA,CAAI,iCAAM,CAAI,CAAC,cACf1C,IAAA,QAAKyC,SAAS,CAAC,wBAAwB,CAAAC,QAAA,cACrC1C,IAAA,aACE0D,WAAW,CAAC,6CAAU,CACtBC,GAAG,CAAEhD,UAAW,CAChBsC,KAAK,CAAElC,OAAQ,CACfmC,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAAnC,UAAU,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,EAAC,CAC7C,CAAC,CACC,CAAC,EACC,CAAC,cACVjD,IAAA,YAAA0C,QAAA,cACExC,KAAA,QAAKuC,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B1C,IAAA,CAACL,QAAQ,EAACkD,IAAI,CAAE,MAAO,CAACC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAhB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAE,CAAC,cACvD9B,IAAA,CAACL,QAAQ,EACPkD,IAAI,CAAE,MAAO,CACbG,IAAI,CAAE,UAAW,CACjBF,OAAO,CAAEf,YAAa,CACvB,CAAC,EACC,CAAC,CACC,CAAC,EACP,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}