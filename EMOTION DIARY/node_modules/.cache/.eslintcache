[{"/Users/eunjung/Desktop/EMOTION DIARY/src/index.js":"1","/Users/eunjung/Desktop/EMOTION DIARY/src/App.js":"2","/Users/eunjung/Desktop/EMOTION DIARY/src/pages/Home.js":"3","/Users/eunjung/Desktop/EMOTION DIARY/src/pages/Edit.js":"4","/Users/eunjung/Desktop/EMOTION DIARY/src/pages/Diary.js":"5","/Users/eunjung/Desktop/EMOTION DIARY/src/pages/New.js":"6","/Users/eunjung/Desktop/EMOTION DIARY/src/components/MyButton.js":"7","/Users/eunjung/Desktop/EMOTION DIARY/src/components/MyHeader.js":"8","/Users/eunjung/Desktop/EMOTION DIARY/src/components/DiaryList.js":"9","/Users/eunjung/Desktop/EMOTION DIARY/src/components/DiaryItem.js":"10","/Users/eunjung/Desktop/EMOTION DIARY/src/components/DiaryEditor.js":"11","/Users/eunjung/Desktop/EMOTION DIARY/src/components/EmotionItem.js":"12","/Users/eunjung/Desktop/EMOTION DIARY/src/util/emotion.js":"13"},{"size":502,"mtime":1691671207690,"results":"14","hashOfConfig":"15"},{"size":2654,"mtime":1691688155300,"results":"16","hashOfConfig":"15"},{"size":1538,"mtime":1691686275373,"results":"17","hashOfConfig":"15"},{"size":1056,"mtime":1691688634876,"results":"18","hashOfConfig":"15"},{"size":2410,"mtime":1691688618795,"results":"19","hashOfConfig":"15"},{"size":157,"mtime":1691682423185,"results":"20","hashOfConfig":"15"},{"size":349,"mtime":1691672378780,"results":"21","hashOfConfig":"15"},{"size":294,"mtime":1691673025609,"results":"22","hashOfConfig":"15"},{"size":2460,"mtime":1691688445266,"results":"23","hashOfConfig":"15"},{"size":981,"mtime":1691680964065,"results":"24","hashOfConfig":"15"},{"size":3620,"mtime":1691687966321,"results":"25","hashOfConfig":"15"},{"size":420,"mtime":1691683400507,"results":"26","hashOfConfig":"15"},{"size":678,"mtime":1691685348178,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12j4qiu",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eunjung/Desktop/EMOTION DIARY/src/index.js",[],[],"/Users/eunjung/Desktop/EMOTION DIARY/src/App.js",[],[],"/Users/eunjung/Desktop/EMOTION DIARY/src/pages/Home.js",[],[],"/Users/eunjung/Desktop/EMOTION DIARY/src/pages/Edit.js",["72","73"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryEditor from \"../components/DiaryEditor\";\n\nconst Edit = () => {\n  const [originData, setOriginData] = useState();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const diaryList = useContext(DiaryStateContext);\n\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기`;\n  }, []);\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n      if (targetDiary) {\n        setOriginData(targetDiary);\n      } else {\n        alert(\"없는 일기입니다\");\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  return (\n    <div>\n      {originData && <DiaryEditor isEdit={true} originData={originData} />}\n    </div>\n  );\n};\n\nexport default Edit;\n","/Users/eunjung/Desktop/EMOTION DIARY/src/pages/Diary.js",["74","75","76"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport { emotionList } from \"../util/emotion\";\n\nconst getStringDate = (date) => {\n  return date.toISOString().slice(0, 10);\n};\n\nconst Diary = () => {\n  const { id } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기`;\n  }, []);\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert(\"없는 일기입니다\");\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  if (!data) {\n    return <div className=\"DiaryPage\">로딩 중입니다...</div>;\n  } else {\n    const curEmotionData = emotionList.find(\n      (it) => parseInt(it.emotion_id) === parseInt(data.emotion)\n    );\n    return (\n      <div className=\"DiaryPage\">\n        <MyHeader\n          headText={`${getStringDate(new Date(data.date))} 기록`}\n          leftChild={\n            <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n          }\n          rightChild={\n            <MyButton\n              text={\"수정하기\"}\n              onClick={() => navigate(`/edit/${data.id}`)}\n            />\n          }\n        />\n        <article>\n          <section>\n            <h4>오늘의 감정</h4>\n            <div\n              className={[\n                \"diary_img_wrapper\",\n                `diary_img_wrapper_${data.emotion}`,\n              ].join(\" \")}>\n              <img src={curEmotionData.emotion_img} />\n              <div className=\"emotion_descript\">\n                {curEmotionData.emotion_descript}\n              </div>\n            </div>\n          </section>\n          <section>\n            <h4>오늘의 일기</h4>\n            <div className=\"diary_content_wrapper\">\n              <p>{data.content}</p>\n            </div>\n          </section>\n        </article>\n      </div>\n    );\n  }\n};\n\nexport default Diary;\n","/Users/eunjung/Desktop/EMOTION DIARY/src/pages/New.js",[],[],"/Users/eunjung/Desktop/EMOTION DIARY/src/components/MyButton.js",[],[],"/Users/eunjung/Desktop/EMOTION DIARY/src/components/MyHeader.js",[],[],"/Users/eunjung/Desktop/EMOTION DIARY/src/components/DiaryList.js",["77","78"],[],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyButton from \"./MyButton\";\nimport DiaryItem from \"./DiaryItem\";\n\nconst sortOptionList = [\n  { value: \"latest\", name: \"최신순\" },\n  { value: \"oldest\", name: \"오래된 순\" },\n];\n\nconst filterOptionList = [\n  { value: \"all\", name: \"전부 다\" },\n  { value: \"good\", name: \"좋은 감정만\" },\n  { value: \"bad\", name: \"안 좋은 감정만\" },\n];\nconst ControlMenu = React.memo(({ value, onChange, optionList }) => {\n  return (\n    <select\n      className=\"ControlMenu\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}>\n      {optionList.map((it, idx) => (\n        <option key={idx} value={it.value}>\n          {it.name}\n        </option>\n      ))}\n    </select>\n  );\n});\n\nconst DiaryList = ({ diaryList }) => {\n  const navigate = useNavigate();\n  const [sortType, setSortType] = useState(\"latest\");\n  const [filter, setFilter] = useState(\"all\");\n\n  const getProcessedDiaryList = () => {\n    const filterCallBack = (item) => {\n      if (filter === \"good\") {\n        return parseInt(item.emotion) <= 3;\n      } else {\n        return parseInt(item.emotion) > 3;\n      }\n    };\n\n    const compare = (a, b) => {\n      if (sortType === \"latest\") {\n        return parseInt(b.date) - parseInt(a.date);\n      } else {\n        return parseInt(a.date) - parseInt(b.date);\n      }\n    };\n    const copyList = JSON.parse(JSON.stringify(diaryList));\n\n    const filterdList =\n      filter === \"all\" ? copyList : copyList.filter((it) => filterCallBack(it));\n    const sortedList = copyList.sort(compare);\n    return sortedList;\n  };\n\n  return (\n    <div className=\"DiaryList\">\n      <div className=\"menu_wrapper\">\n        <div className=\"left_col\">\n          <ControlMenu\n            value={sortType}\n            onChange={setSortType}\n            optionList={sortOptionList}\n          />\n          <ControlMenu\n            value={filter}\n            onChange={setFilter}\n            optionList={filterOptionList}\n          />\n        </div>\n        <div className=\"right_col\">\n          <MyButton\n            type={\"positive\"}\n            text={\"새 일기 쓰기\"}\n            onClick={() => navigate(\"/new\")}\n          />\n        </div>\n      </div>\n\n      {getProcessedDiaryList().map((it) => (\n        <DiaryItem key={it.id} {...it} />\n      ))}\n    </div>\n  );\n};\n\nDiaryList.defaultProps = {\n  diaryList: [],\n};\n\nexport default DiaryList;\n","/Users/eunjung/Desktop/EMOTION DIARY/src/components/DiaryItem.js",["79"],[],"import MyButton from \"./MyButton\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst DiaryItem = ({ id, emotion, content, date }) => {\n  const navigate = useNavigate();\n\n  const strDate = new Date(parseInt(date)).toLocaleDateString();\n\n  const goDetail = () => {\n    navigate(`/diary/${id}`);\n  };\n\n  const goEdit = () => {\n    navigate(`/edit/${id}`);\n  };\n\n  return (\n    <div className=\"DiaryItem\">\n      <div\n        className={[\n          \"emotion_img_wrapper\",\n          `emotion_img_wrapper_${emotion}`,\n        ].join(\" \")}>\n        <img src={process.env.PUBLIC_URL + `assets/emotion${emotion}.png`} />\n      </div>\n      <div onClick={goDetail} className=\"info_wrapper\">\n        <div className=\"diary_date\">{strDate}</div>\n        <div className=\"diary_content_preview\">{content.slice(0, 25)}</div>\n      </div>\n      <div onClick={goEdit} className=\"btn_wrapper\">\n        <MyButton text={\"수정하기\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryItem;\n","/Users/eunjung/Desktop/EMOTION DIARY/src/components/DiaryEditor.js",[],[],"/Users/eunjung/Desktop/EMOTION DIARY/src/components/EmotionItem.js",["80"],[],"const EmotionItem = ({\n  emotion_id,\n  emotion_img,\n  emotion_descript,\n  onClick,\n  isSelected,\n}) => {\n  return (\n    <div\n      onClick={() => onClick(emotion_id)}\n      className={[\n        \"EmotionItem\",\n        isSelected ? `EmotionItem_on_${emotion_id}` : `EmotionItem_off`,\n      ].join(\" \")}>\n      <img src={emotion_img} />\n      <span>{emotion_descript}</span>\n    </div>\n  );\n};\n\nexport default EmotionItem;\n","/Users/eunjung/Desktop/EMOTION DIARY/src/util/emotion.js",[],[],{"ruleId":"81","severity":1,"message":"82","line":16,"column":6,"nodeType":"83","endLine":16,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":30,"column":6,"nodeType":"83","endLine":30,"endColumn":21,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"82","line":21,"column":6,"nodeType":"83","endLine":21,"endColumn":8,"suggestions":"87"},{"ruleId":"81","severity":1,"message":"85","line":35,"column":6,"nodeType":"83","endLine":35,"endColumn":21,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":65,"column":15,"nodeType":"91","endLine":65,"endColumn":55},{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":54,"column":11,"nodeType":"94","messageId":"95","endLine":54,"endColumn":22},{"ruleId":"89","severity":1,"message":"90","line":24,"column":9,"nodeType":"91","endLine":24,"endColumn":78},{"ruleId":"89","severity":1,"message":"90","line":15,"column":7,"nodeType":"91","endLine":15,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["98"],["99"],["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'filterdList' is assigned a value but never used.",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"101","fix":"105"},{"desc":"103","fix":"106"},"Update the dependencies array to be: [id]",{"range":"107","text":"108"},"Update the dependencies array to be: [id, diaryList, navigate]",{"range":"109","text":"110"},{"range":"111","text":"108"},{"range":"112","text":"110"},[546,548],"[id]",[869,884],"[id, diaryList, navigate]",[702,704],[1019,1034]]